<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core">
    <h:head>
        <title>MesosWebScheduler</title>
        <style type="text/css">
            .preformatted {
                white-space: pre-wrap;
            }
            .companyHeaderGrid tr, .companyHeaderGrid td {
                border: none;
            }
        </style>
    </h:head>
    <h:body>
        <p:growl id="growl" showDetail="true" autoUpdate="true" />

        <p:layout fullPage="true" >

            <p:layoutUnit position="north" size="300" style="border: 0 !important;">
                <center>
                    Powered by <p:graphicImage style="padding-top: 2% ;" value="https://d23f6h5jpj26xu.cloudfront.net/vxhpyhngspj9xg_small.jpg" />
                </center>

                <p:separator />

            </p:layoutUnit>

            <p:layoutUnit position="south" size="20" style="border: 0 !important;">
            </p:layoutUnit>

            <p:layoutUnit position="west" size="200" style="border: 0 !important;">
            </p:layoutUnit>

            <p:layoutUnit position="east" size="200" style="border: 0 !important;">
            </p:layoutUnit>

            <p:layoutUnit position="center" style="border: 0 !important;">
                <center>
                    <h3 style="margin-top:0">#{schedulerTask.username}@MesosWebScheduler</h3>

                    <h:form id="main">

                        <p:tabView id="mainTabView" orientation="left">
                            <p:tab id="tabOne" title="Launch Tasks">
                                Please fill in the docker image you want to start, select the needed
                                CPU-cores and the needed Memory and launch the task with pressing on Run!
                                <p:separator />
                                <p:messages autoUpdate="true" />
                                <br />
                                <p:panelGrid style="border-style: none !important;" columns="2" columnClasses="grid,grid">
                                    <p:panelGrid columns="3">
                                        <h:outputText value="DockerImage Name: " />
                                        <p:inputText placeholder="hello-world" required="true" requiredMessage="Please insert Dockerimage name" id="docker" value="#{schedulerTask.docker}" />
                                        <p:inputText value="f" style="visibility: hidden" />

                                        <h:outputText value="Needed CPU Cores: " />
                                        <p:spinner value="#{schedulerTask.cpu}" suffix=" Core(s)" min="1" max="2" />
                                        <p:inputText value="f" style="visibility: hidden" />

                                        <h:outputText value="Needed Memory: " />
                                        <p:spinner value="#{schedulerTask.mem}" suffix=" MB" min="256" max="2048" stepFactor="256"/>
                                        <p:inputText value="f" style="visibility: hidden" />

                                        <p:selectBooleanCheckbox itemLabel="Parameter?" value="#{schedulerTask.paramNeeded}" >
                                            <p:ajax event="change" listener="#{schedulerTask.paramChanger()}" />
                                        </p:selectBooleanCheckbox> 
                                        <p:inputText widgetVar="param" disabled="#{!schedulerTask.paramNeeded}" placeholder="parameter" value="#{schedulerTask.parameter}" />
                                        <p:inputText value="f" style="visibility: hidden" />

                                        <p:selectBooleanCheckbox itemLabel="Volume 1?" value="#{schedulerTask.mountVolumeOne}" >
                                            <p:ajax event="change" listener="#{schedulerTask.mountVolOneChanger()}" />
                                        </p:selectBooleanCheckbox> 
                                        <p:inputText widgetVar="mountV1H" disabled="#{!schedulerTask.mountVolumeOne}" placeholder="Host Volume" value="#{schedulerTask.mountVolumeOneHost}" />
                                        <p:inputText widgetVar="mountV1G" disabled="#{!schedulerTask.mountVolumeOne}" placeholder="Container Volume" value="#{schedulerTask.mountVolumeOneContainer}" />

                                        <p:selectBooleanCheckbox itemLabel="Volume 2?" value="#{schedulerTask.mountVolumeTwo}" >
                                            <p:ajax event="change" listener="#{schedulerTask.mountVolTwoChanger()}" />
                                        </p:selectBooleanCheckbox> 
                                        <p:inputText widgetVar="mountV2H" disabled="#{!schedulerTask.mountVolumeTwo}" placeholder="Host Volume" value="#{schedulerTask.mountVolumeTwoHost}" />
                                        <p:inputText widgetVar="mountV2G" disabled="#{!schedulerTask.mountVolumeTwo}" placeholder="Container Volume" value="#{schedulerTask.mountVolumeTwoContainer}" />

                                        <f:facet name="footer">
                                            <p:commandButton style="float: right;" value="Run" action="#{schedulerTask.execute()}" oncomplete="PF('poller').start();" />
                                        </f:facet>
                                    </p:panelGrid>
                                    <p:panelGrid columns="2" style="border: 0 !important;">
                                        <h:outputText value="Master reachable: " />
                                        <p:graphicImage value="/img/greenBall.png" rendered="#{schedulerWatcher.masterReachable}" />
                                        <p:graphicImage value="/img/grayBall.png" rendered="#{!schedulerWatcher.masterReachable}" />

                                        <h:outputText value="Slave reachable: " />
                                        <p:graphicImage value="/img/greenBall.png" rendered="#{schedulerWatcher.slaveReachable}" />
                                        <p:graphicImage value="/img/grayBall.png" rendered="#{!schedulerWatcher.slaveReachable}" />
                                    </p:panelGrid>
                                </p:panelGrid>

                                <p:spotlight target="docker" />

                            </p:tab>

                            <p:tab id="tabTwo" title="Finished Tasks (#{schedulerWatcher.finished!!!!!!})">
                                <p:dataTable id="finishedTasks" var="task" value="#{schedulerWatcher.finished}">
                                    <f:facet name="header">
                                        Finished Tasks
                                    </f:facet>
                                    <p:column headerText="TaskID">
                                        <h:outputText value="#{task.taskId.value}" />
                                    </p:column>
                                    <p:column headerText="SlaveID">
                                        <h:outputText value="#{task.slaveId.value}" />
                                    </p:column>
                                    <p:column headerText="Result" style="width:50px;text-align: center">
                                        <p:commandButton update=":main:taskDetail" oncomplete="PF('taskDetail').show()" icon="ui-icon-search" title="View">
                                            <f:setPropertyActionListener value="#{task}" target="#{schedulerWatcher.selectedTask}" />
                                        </p:commandButton>
                                    </p:column>
                                </p:dataTable>
                            </p:tab>
                            <p:tab id="tabThree" title="Running Tasks (#{schedulerWatcher.running.size()})">
                                <p:dataTable id="runningTasks" var="task" value="#{schedulerWatcher.running}">
                                    <f:facet name="header">
                                        Running Tasks
                                    </f:facet>
                                    <p:column headerText="TaskID">
                                        <h:outputText value="#{task.taskId.value}" />
                                    </p:column>
                                    <p:column headerText="SlaveID">
                                        <h:outputText value="#{task.slaveId.value}" />
                                    </p:column>
                                </p:dataTable>
                            </p:tab>
                            <p:tab id="tabFour" title="Pending Tasks (#{schedulerWatcher.pending.size()})">
                                <p:dataTable id="pendingTasks" var="task" value="#{schedulerWatcher.pending}">
                                    <f:facet name="header">
                                        Pending Tasks
                                    </f:facet>
                                    <p:column headerText="TaskID">
                                        <h:outputText value="#{task.taskId.value}" />
                                    </p:column>
                                    <p:column headerText="SlaveID">
                                        <h:outputText value="#{task.slaveId.value}" />
                                    </p:column>
                                </p:dataTable>
                            </p:tab>
                        </p:tabView>

                        <p:poll widgetVar="poller" autoStart="false" stop="#{schedulerWatcher.pollerFinish}" listener="#{schedulerWatcher.reloadLists()}" update="mainTabView" />

                        <p:dialog widgetVar="taskDetail" fitViewport="true" header="Task (#{schedulerWatcher.selectedTask.taskId.value}) Result" id="taskDetail" width="600" height="600">
                            <h:outputText styleClass="preformatted" value="#{schedulerWatcher.readResult()}" />
                        </p:dialog>

                    </h:form>
                </center>
            </p:layoutUnit>

        </p:layout>
    </h:body>
</html>

